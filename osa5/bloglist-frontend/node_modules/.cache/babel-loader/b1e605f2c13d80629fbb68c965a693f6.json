{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = '/api/blogs';\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = async newObject => {\n  try {\n    const config = {\n      headers: {\n        Authorization: token\n      }\n    };\n    const response = await axios.post(baseUrl, newObject, config);\n    return response.data;\n  } catch (error) {\n    setErrorMessage(error);\n    setTimeout(() => {\n      setErrorMessage(null);\n    }, 5000);\n  }\n};\n\nexport default {\n  getAll,\n  create,\n  setToken\n};","map":{"version":3,"sources":["/Users/pyry/Desktop/KOULU/3syksy/Osa5/bloglist-frontend/src/services/blogs.js"],"names":["axios","baseUrl","token","setToken","newToken","getAll","request","get","then","response","data","create","newObject","config","headers","Authorization","post","error","setErrorMessage","setTimeout"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,YAAhB;AAEA,IAAIC,KAAK,GAAG,IAAZ;;AAEA,MAAMC,QAAQ,GAAGC,QAAQ,IAAI;AAC3BF,EAAAA,KAAK,GAAI,UAASE,QAAS,EAA3B;AACD,CAFD;;AAIA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,OAAO,GAAGN,KAAK,CAACO,GAAN,CAAUN,OAAV,CAAhB;AACA,SAAOK,OAAO,CAACE,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAlC,CAAP;AACD,CAHD;;AAKA,MAAMC,MAAM,GAAG,MAAMC,SAAN,IAAmB;AAChC,MAAI;AACF,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAEb;AAAjB;AADI,KAAf;AAIA,UAAMO,QAAQ,GAAG,MAAMT,KAAK,CAACgB,IAAN,CAAWf,OAAX,EAAoBW,SAApB,EAA+BC,MAA/B,CAAvB;AACA,WAAOJ,QAAQ,CAACC,IAAhB;AACD,GAPD,CAOE,OAAMO,KAAN,EAAa;AACbC,IAAAA,eAAe,CAACD,KAAD,CAAf;AACAE,IAAAA,UAAU,CAAC,MAAM;AACfD,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD,KAFS,EAER,IAFQ,CAAV;AAGD;AACF,CAdD;;AAgBA,eAAe;AAAEb,EAAAA,MAAF;AAAUM,EAAAA,MAAV;AAAkBR,EAAAA;AAAlB,CAAf","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  try {\n    const config = {\n      headers: { Authorization: token },\n    }\n  \n    const response = await axios.post(baseUrl, newObject, config)\n    return response.data\n  } catch(error) {\n    setErrorMessage(error)\n    setTimeout(() => {\n      setErrorMessage(null)\n    },5000)\n  }\n}\n\nexport default { getAll, create, setToken }"]},"metadata":{},"sourceType":"module"}