{"ast":null,"code":"var _jsxFileName = \"/Users/pyry/Desktop/KOULU/3syksy/Osa7/bloglist-frontend/src/components/Comments.js\";\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nconst Comments = () => {\n  const blogs = useSelector(state => state.blogReducer);\n  const [comment, setComment] = useState('');\n  const id = useParams().id;\n\n  if (!blogs) {\n    return null;\n  }\n\n  const blog = blogs.find(blog => blog.id === id);\n  const allComments = blog.comments;\n\n  const handleSubmit = () => {\n    const blogObject = {\n      user: blog.user.id,\n      likes: blog.likes,\n      author: blog.author,\n      title: blog.title,\n      url: blog.url,\n      id: blog.id,\n      comments: blog.comments.concat(comment)\n    };\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Comments\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Add comment:\", React.createElement(\"input\", {\n    type: \"text\",\n    value: comment,\n    id: \"title\",\n    onChange: ({\n      target\n    }) => setComment(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"create\")), allComments.map(comment => React.createElement(\"li\", {\n    key: comment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, comment)));\n};\n\nexport default Comments;","map":{"version":3,"sources":["/Users/pyry/Desktop/KOULU/3syksy/Osa7/bloglist-frontend/src/components/Comments.js"],"names":["React","useState","useSelector","useParams","Comments","blogs","state","blogReducer","comment","setComment","id","blog","find","allComments","comments","handleSubmit","blogObject","user","likes","author","title","url","concat","target","value","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAMC,KAAK,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACC,WAAhB,CAAzB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMS,EAAE,GAAGP,SAAS,GAAGO,EAAvB;;AACA,MAAI,CAACL,KAAL,EAAY;AACV,WAAO,IAAP;AACD;;AACD,QAAMM,IAAI,GAAGN,KAAK,CAACO,IAAN,CAAWD,IAAI,IAAIA,IAAI,CAACD,EAAL,KAAYA,EAA/B,CAAb;AACA,QAAMG,WAAW,GAAGF,IAAI,CAACG,QAAzB;;AAEA,QAAMC,YAAY,GAAG,MAAM;AACzB,UAAMC,UAAU,GAAG;AACjBC,MAAAA,IAAI,EAAEN,IAAI,CAACM,IAAL,CAAUP,EADC;AAEjBQ,MAAAA,KAAK,EAAEP,IAAI,CAACO,KAFK;AAGjBC,MAAAA,MAAM,EAAER,IAAI,CAACQ,MAHI;AAIjBC,MAAAA,KAAK,EAAET,IAAI,CAACS,KAJK;AAKjBC,MAAAA,GAAG,EAAEV,IAAI,CAACU,GALO;AAMjBX,MAAAA,EAAE,EAAEC,IAAI,CAACD,EANQ;AAOjBI,MAAAA,QAAQ,EAAEH,IAAI,CAACG,QAAL,CAAcQ,MAAd,CAAqBd,OAArB;AAPO,KAAnB;AAUD,GAXD;;AAaA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAM,IAAA,QAAQ,EAAEO,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEP,OAFT;AAGE,IAAA,EAAE,EAAC,OAHL;AAIE,IAAA,QAAQ,EAAE,CAAC;AAAEe,MAAAA;AAAF,KAAD,KAAgBd,UAAU,CAACc,MAAM,CAACC,KAAR,CAJtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAOE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,CAFF,EAWGX,WAAW,CAACY,GAAZ,CAAiBjB,OAAD,IACf;AAAI,IAAA,GAAG,EAAEA,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OADH,CADD,CAXH,CADF;AAmBD,CA1CD;;AA4CA,eAAeJ,QAAf","sourcesContent":["import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useParams } from 'react-router-dom'\n\nconst Comments = () => {\n  const blogs = useSelector(state => state.blogReducer)\n  const [comment, setComment] = useState('')\n  const id = useParams().id\n  if (!blogs) {\n    return null\n  }\n  const blog = blogs.find(blog => blog.id === id)\n  const allComments = blog.comments\n\n  const handleSubmit = () => {\n    const blogObject = {\n      user: blog.user.id,\n      likes: blog.likes,\n      author: blog.author,\n      title: blog.title,\n      url: blog.url,\n      id: blog.id,\n      comments: blog.comments.concat(comment)\n    }\n    \n  }\n\n  return (\n    <div>\n      <h2>Comments</h2>\n      <form onSubmit={handleSubmit}>\n          Add comment:\n        <input\n          type=\"text\"\n          value={comment}\n          id=\"title\"\n          onChange={({ target }) => setComment(target.value)}/>\n        <button type='submit'>create</button>\n      </form>\n      {allComments.map((comment) =>\n        <li key={comment}>\n          {comment}\n        </li>\n      )}\n    </div>\n  )\n}\n\nexport default Comments"]},"metadata":{},"sourceType":"module"}