{"ast":null,"code":"var _jsxFileName = \"/Users/pyry/Desktop/KOULU/3syksy/Osa7/bloglist-frontend/src/components/BlogForm.js\";\nimport React, { useState } from 'react';\nimport blogService from '../services/blogs';\nimport Togglable from './Togglable';\nimport { useDispatch } from 'react-redux';\nimport { setNotification } from '../reducers/notificationReducer';\nimport { setErrorNotification } from '../reducers/errorNotificationReducer';\nimport { newBlog } from '../reducers/blogReducer';\n\nconst AddBlogForm = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"create new\"), React.createElement(\"form\", {\n    onSubmit: props.addBlog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"title:\", React.createElement(\"input\", {\n    type: \"text\",\n    value: props.title,\n    id: \"title\",\n    onChange: ({\n      target\n    }) => props.setTitle(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"author:\", React.createElement(\"input\", {\n    type: \"text\",\n    value: props.author,\n    id: \"author\",\n    onChange: ({\n      target\n    }) => props.setAuthor(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"url:\", React.createElement(\"input\", {\n    type: \"text\",\n    value: props.url,\n    id: \"url\",\n    onChange: ({\n      target\n    }) => props.setURL(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"create!\")));\n};\n\nconst BlogForm = props => {\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [url, setURL] = useState('');\n  const dispatch = useDispatch();\n\n  const addBlog = event => {\n    event.preventDefault();\n\n    try {\n      const blogObject = {\n        title: title,\n        author: author,\n        url: url\n      };\n      blogService.create(blogObject).then(returnedBlog => {\n        if (JSON.stringify(returnedBlog).split(':')[0] === '\"error') {\n          if (title === '') {\n            dispatch(setErrorNotification('title missing', 5));\n          } else {\n            dispatch(setErrorNotification('URL missing', 5));\n          }\n        } else {\n          dispatch(newBlog(returnedBlog));\n          dispatch(setNotification(`new Blog ${title} added`, 5));\n          setTitle('');\n          setAuthor('');\n          setURL('');\n        }\n      });\n    } catch (error) {\n      throw new error();\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"blogs\"), React.createElement(Togglable, {\n    buttonLabel: \"create new Blog\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(AddBlogForm, {\n    addBlog: addBlog,\n    title: title,\n    author: author,\n    url: url,\n    setTitle: setTitle,\n    setURL: setURL,\n    setAuthor: setAuthor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })));\n};\n\nexport default BlogForm;\nexport { AddBlogForm };","map":{"version":3,"sources":["/Users/pyry/Desktop/KOULU/3syksy/Osa7/bloglist-frontend/src/components/BlogForm.js"],"names":["React","useState","blogService","Togglable","useDispatch","setNotification","setErrorNotification","newBlog","AddBlogForm","props","addBlog","title","target","setTitle","value","author","setAuthor","url","setURL","BlogForm","dispatch","event","preventDefault","blogObject","create","then","returnedBlog","JSON","stringify","split","error"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport blogService from '../services/blogs'\nimport Togglable from './Togglable'\nimport { useDispatch } from 'react-redux'\nimport { setNotification } from '../reducers/notificationReducer'\nimport { setErrorNotification } from '../reducers/errorNotificationReducer'\nimport { newBlog } from '../reducers/blogReducer'\n\nconst AddBlogForm = (props) => {\n  return (\n    <div>\n      <h2>create new</h2>\n      <form onSubmit={props.addBlog}>\n        <div>\n        title:\n          <input\n            type=\"text\"\n            value={props.title}\n            id=\"title\"\n            onChange={({ target }) => props.setTitle(target.value)}\n          />\n        </div>\n        <div>\n        author:\n          <input\n            type=\"text\"\n            value={props.author}\n            id=\"author\"\n            onChange={({ target }) => props.setAuthor(target.value)}\n          />\n        </div>\n        <div>\n        url:\n          <input\n            type=\"text\"\n            value={props.url}\n            id=\"url\"\n            onChange={({ target }) => props.setURL(target.value)}\n          />\n        </div>\n        <button type=\"submit\">create!</button>\n      </form>\n    </div>\n  )\n}\n\n\nconst BlogForm = (props) => {\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setURL] = useState('')\n  const dispatch = useDispatch()\n\n  const addBlog = (event) => {\n    event.preventDefault()\n    try {\n      const blogObject = {\n        title: title,\n        author: author,\n        url: url\n      }\n      blogService\n        .create(blogObject)\n        .then(returnedBlog => {\n          if (JSON.stringify(returnedBlog).split(':')[0]=== '\"error') {\n            if(title === '') {\n              dispatch(setErrorNotification('title missing',5))\n            } else {\n              dispatch(setErrorNotification('URL missing',5))\n            }\n          } else {\n            dispatch(newBlog(returnedBlog))\n            dispatch(setNotification(`new Blog ${title} added`,5))\n            setTitle('')\n            setAuthor('')\n            setURL('')\n          }\n        })\n    }  catch (error) {\n      throw new (error)\n    }\n  }\n\n  return (\n    <div>\n      <h2>blogs</h2>\n      <Togglable buttonLabel='create new Blog'>\n        <AddBlogForm addBlog={addBlog} title={title} author={author} url={url} setTitle={setTitle} setURL={setURL} setAuthor={setAuthor}/>\n      </Togglable>\n    </div>\n  )\n}\n\nexport default  BlogForm\nexport { AddBlogForm }"]},"metadata":{},"sourceType":"module"}