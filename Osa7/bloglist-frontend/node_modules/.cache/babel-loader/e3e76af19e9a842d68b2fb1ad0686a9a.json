{"ast":null,"code":"var _jsxFileName = \"/Users/pyry/Desktop/KOULU/3syksy/Osa7/bloglist-frontend/src/components/Comments.js\";\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport commentService from '../services/comments';\nimport { useDispatch } from 'react-redux';\nimport initializeBlogs from '../reducers/blogReducer';\n\nconst Comments = () => {\n  const blogs = useSelector(state => state.blogReducer);\n  const dispatch = useDispatch();\n  const [comment, setComment] = useState('');\n  const id = useParams().id;\n\n  if (!blogs) {\n    return null;\n  }\n\n  const blog = blogs.find(blog => blog.id === id);\n  const allComments = blog.comments;\n\n  const getID = () => {\n    return Math.floor(Math.random() * Math.floor(10000));\n  };\n\n  const handleSubmit = () => {\n    const blogObject = {\n      user: blog.user.id,\n      likes: blog.likes,\n      author: blog.author,\n      title: blog.title,\n      url: blog.url,\n      id: blog.id,\n      comments: blog.comments.concat({\n        comment\n      })\n    };\n    commentService.addComment(blogObject);\n    dispatch(initializeBlogs());\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Comments\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Add comment:\", React.createElement(\"input\", {\n    type: \"text\",\n    value: comment,\n    id: \"title\",\n    onChange: ({\n      target\n    }) => setComment(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"create\")), allComments.map(comment => React.createElement(\"li\", {\n    key: comment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, comment)));\n};\n\nexport default Comments;","map":{"version":3,"sources":["/Users/pyry/Desktop/KOULU/3syksy/Osa7/bloglist-frontend/src/components/Comments.js"],"names":["React","useState","useSelector","useParams","commentService","useDispatch","initializeBlogs","Comments","blogs","state","blogReducer","dispatch","comment","setComment","id","blog","find","allComments","comments","getID","Math","floor","random","handleSubmit","blogObject","user","likes","author","title","url","concat","addComment","target","value","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,eAAP,MAA4B,yBAA5B;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAMC,KAAK,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,WAAhB,CAAzB;AACA,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMa,EAAE,GAAGX,SAAS,GAAGW,EAAvB;;AACA,MAAI,CAACN,KAAL,EAAY;AACV,WAAO,IAAP;AACD;;AACD,QAAMO,IAAI,GAAGP,KAAK,CAACQ,IAAN,CAAWD,IAAI,IAAIA,IAAI,CAACD,EAAL,KAAYA,EAA/B,CAAb;AACA,QAAMG,WAAW,GAAGF,IAAI,CAACG,QAAzB;;AAEA,QAAMC,KAAK,GAAG,MAAM;AAChB,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAW,KAAX,CAA3B,CAAP;AACH,GAFD;;AAIA,QAAME,YAAY,GAAG,MAAM;AACzB,UAAMC,UAAU,GAAG;AACjBC,MAAAA,IAAI,EAAEV,IAAI,CAACU,IAAL,CAAUX,EADC;AAEjBY,MAAAA,KAAK,EAAEX,IAAI,CAACW,KAFK;AAGjBC,MAAAA,MAAM,EAAEZ,IAAI,CAACY,MAHI;AAIjBC,MAAAA,KAAK,EAAEb,IAAI,CAACa,KAJK;AAKjBC,MAAAA,GAAG,EAAEd,IAAI,CAACc,GALO;AAMjBf,MAAAA,EAAE,EAAEC,IAAI,CAACD,EANQ;AAOjBI,MAAAA,QAAQ,EAAEH,IAAI,CAACG,QAAL,CAAcY,MAAd,CAAqB;AAAClB,QAAAA;AAAD,OAArB;AAPO,KAAnB;AAUAR,IAAAA,cAAc,CAAC2B,UAAf,CAA0BP,UAA1B;AACAb,IAAAA,QAAQ,CAACL,eAAe,EAAhB,CAAR;AACD,GAbD;;AAeA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAM,IAAA,QAAQ,EAAEiB,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEX,OAFT;AAGE,IAAA,EAAE,EAAC,OAHL;AAIE,IAAA,QAAQ,EAAE,CAAC;AAAEoB,MAAAA;AAAF,KAAD,KAAgBnB,UAAU,CAACmB,MAAM,CAACC,KAAR,CAJtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAOE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,CAFF,EAWGhB,WAAW,CAACiB,GAAZ,CAAiBtB,OAAD,IACf;AAAI,IAAA,GAAG,EAAEA,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OADH,CADD,CAXH,CADF;AAmBD,CAjDD;;AAmDA,eAAeL,QAAf","sourcesContent":["import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport commentService from '../services/comments'\nimport { useDispatch } from 'react-redux'\nimport initializeBlogs from '../reducers/blogReducer'\n\nconst Comments = () => {\n  const blogs = useSelector(state => state.blogReducer)\n  const dispatch = useDispatch()\n  const [comment, setComment] = useState('')\n  const id = useParams().id\n  if (!blogs) {\n    return null\n  }\n  const blog = blogs.find(blog => blog.id === id)\n  const allComments = blog.comments\n\n  const getID = () => {\n      return Math.floor(Math.random() * Math.floor(10000))\n  }\n\n  const handleSubmit = () => {\n    const blogObject = {\n      user: blog.user.id,\n      likes: blog.likes,\n      author: blog.author,\n      title: blog.title,\n      url: blog.url,\n      id: blog.id,\n      comments: blog.comments.concat({comment, })\n    }\n\n    commentService.addComment(blogObject)\n    dispatch(initializeBlogs())\n  }\n\n  return (\n    <div>\n      <h2>Comments</h2>\n      <form onSubmit={handleSubmit}>\n          Add comment:\n        <input\n          type=\"text\"\n          value={comment}\n          id=\"title\"\n          onChange={({ target }) => setComment(target.value)}/>\n        <button type='submit'>create</button>\n      </form>\n      {allComments.map((comment) =>\n        <li key={comment}>\n          {comment}\n        </li>\n      )}\n    </div>\n  )\n}\n\nexport default Comments"]},"metadata":{},"sourceType":"module"}